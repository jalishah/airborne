
/*
 * file: core.proto
 * purpose: message format for interfacing the core
 * author: Tobias Simon, Ilmenau University of Technology
 */


enum RequestType
{ 
   /* general (no arguments in Request): */
   POWER_ON = 1;
   POWER_OFF = 2;
   START_MOTORS = 3;
   STOP_MOTORS = 4;

   /* controller related (ctrl set in Request): */
   CTRL_SET_SP = 5;
   CTRL_GET_ERR = 6;
   CTRL_RESET = 7;

   /* state related (state set in Request): */
   STATE_GET = 8;
}


enum CtrlType
{ 
   ALT = 1; /* altitude */
   GPS = 2; /* gps position */
   YAW = 3; /* yaw position */
}


enum AltCtrlType
{
   RELATIVE = 1;
   ABSOLUTE = 2;
}


message CtrlData
{
   required CtrlType type = 1;
   repeated float pos = 2; /* required by CTRL_SET_SP */
   optional float speed = 3; /* required by CTRL_SET_SP */
   optional AltCtrlType alt_type = 4; /* required if CTRL_SET_SP */
}


enum StateType
{
   /* model states: */
   ULTRA_ALT = 1;
   BARO_ALT = 2;
   GPS_START = 3;
   GPS_REL = 4;
   YAW_POS = 5;
   
   /* system health information: */
   VOLTAGE = 6;
   RC_QUAL = 7;
}


message Request
{
   required RequestType type = 1;
   optional CtrlData ctrl = 2; /* required by (SET|RESET)_SETPOINT */
   optional StateType state_type = 3; /* required by GET_STATE */
}


enum Status
{
   OK = 0; /* everything ok */
   E_PB = -1; /* protbuf parser error */
   E_ARG = -2; /* argument errror */
   E_HW = -3; /* hardware error */
}


message Reply
{
   required Status status = 1;
   optional string message = 2;
   repeated float value = 3; /* set when STATE_GET or CTRL_GET_ERR requested */
}

